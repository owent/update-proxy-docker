name: "Build On Linux"

on: # @see https://help.github.com/en/articles/events-that-trigger-workflows#webhook-events
  push:
    branches: # Array of patterns that match refs/heads
      - main
    tags:
      - "*"
  schedule:
    # * is a special character in YAML so you have to quote this string
    - cron: "46 2 * * 3"

jobs:
  build: # job id, can be any string
    # Job name is Build And Publish
    name: Build
    # This job runs on Linux
    strategy:
      matrix:
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: ">=1.19.0"
      - name: Build v2ray
        shell: bash
        run: |
          which docker || true;
          curl -k -L --retry 10 --retry-max-time 1800 -o v2ray.Dockerfile https://raw.githubusercontent.com/owent-utils/docker-setup/main/setup-router/v2ray.Dockerfile
          echo "${{ secrets.DOCKER_TOKEN }}" | docker login -u "owt5008137" --password-stdin docker.io
          docker build --build-arg GITHUB_TOKEN=${{ secrets.PRIVATE_GITHUB_TOKEN }} --force-rm --tag docker.io/owt5008137/proxy-with-geo:latest -f v2ray.Dockerfile .
          docker push docker.io/owt5008137/proxy-with-geo:latest
      - name: Build smartdns
        shell: bash
        run: |
          which docker || true;
          curl -k -L --retry 10 --retry-max-time 1800 -o smartdns.Dockerfile https://raw.githubusercontent.com/owent-utils/docker-setup/main/setup-router/smartdns/smartdns.Dockerfile
          curl -k -L --retry 10 --retry-max-time 1800 -o smartdns.origin.conf https://raw.githubusercontent.com/owent-utils/docker-setup/main/setup-router/smartdns/smartdns.origin.conf
          echo "${{ secrets.DOCKER_TOKEN }}" | docker login -u "owt5008137" --password-stdin docker.io
          docker build --build-arg GITHUB_TOKEN=${{ secrets.PRIVATE_GITHUB_TOKEN }} --force-rm --tag docker.io/owt5008137/smartdns:latest -f smartdns.Dockerfile .
          docker push docker.io/owt5008137/smartdns:latest
      - name: Build coredns
        shell: bash
        run: |
          GITHUB_TOKEN="${{ secrets.PRIVATE_GITHUB_TOKEN }}"
          [ "x$GITHUB_TOKEN" = "x" ] || GITHUB_TOKEN_ARGS="-H Authorization: token $GITHUB_TOKEN";
          COREDNS_LATEST_VERSION=$(curl -L $GITHUB_TOKEN_ARGS 'https://api.github.com/repos/coredns/coredns/releases/latest' | grep tag_name | grep -E -o 'v[0-9]+[0-9\.]+' | head -n 1)
          git clone -b $COREDNS_LATEST_VERSION https://github.com/coredns/coredns.git
          cd coredns
          GITCOMMIT="$(git describe --dirty --always)"
          sed -i.bak -r '/alternate:.*/d' plugin.cfg
          sed -i.bak '/forward:.*/i alternate:github.com/coredns/alternate' plugin.cfg
          go get github.com/coredns/alternate
          sed -i.bak -r '/finalize:.*/d' plugin.cfg
          sed -i.bak '/cache:.*/a finalize:github.com/tmeckel/coredns-finalizer' plugin.cfg
          go get github.com/tmeckel/coredns-finalizer
          sed -i.bak -r '/filter:.*/d' plugin.cfg
          sed -i.bak '/cache:.*/a filter:github.com/owent/coredns-filter' plugin.cfg
          go get github.com/owent/coredns-filter@main
          sed -i.bak -r '/nftables:.*/d' plugin.cfg
          sed -i.bak '/cache:.*/i nftables:github.com/owent/coredns-nftables' plugin.cfg
          go get github.com/owent/coredns-nftables@main
          go generate
          # Just like it in make -f Makefile.release build LINUX_ARCH=amd64
          # CGO_ENABLED=1 GOOS=linux GOARCH=amd64 go build  -ldflags="-s -w -X github.com/coredns/coredns/coremain.GitCommit=$GITCOMMIT" -o build/linux/amd64/coredns
          CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build  -ldflags="-s -w -X github.com/coredns/coredns/coremain.GitCommit=$GITCOMMIT -extldflags -static" -o build/linux/amd64/coredns
          which docker || true;
          echo "${{ secrets.DOCKER_TOKEN }}" | docker login -u "owt5008137" --password-stdin docker.io
          cd build/linux/amd64
          sed -i.bak 's;FROM[[:space:]]+scratch;FROM debian:stable-slim;g' ../../../Dockerfile
          sed -i.bak 's;FROM[[:space:]]*--platform=$BUILDPLATFORM[[:space:]]*debian:stable-slim;FROM debian:stable-slim;g'  ../../../Dockerfile
          docker build --force-rm --tag docker.io/owt5008137/coredns:latest -f ../../../Dockerfile .
          docker push docker.io/owt5008137/coredns:latest
